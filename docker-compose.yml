services:
  # MySQL service
  mysql:
    image: mysql:8.0.43
    container_name: mysql_container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "edoRor@44"
      MYSQL_DATABASE: "crud_operations"
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -pedoRor@44"]
      interval: 10s
      timeout: 30s
      retries: 10
    command: --default-authentication-plugin=mysql_native_password

  # Backend service (Node.js + Express)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: kelomi44/backend-app:latest
    container_name: backend_container
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_HOST=mysql_container
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=edoRor@44
      - DB_DATABASE=crud_operations
      - DB_WAITFORCONNECTIONS=true
      - DB_CONNECTIONLIMIT=10
      - DB_QUEUELIMIT=0
      - DB_TABLENAME=users
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules

  # Frontend service (Nginx serving static files)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: kelomi44/frontend-app:latest
    container_name: frontend_container
    restart: unless-stopped
    ports:
      - "5000:80"
    depends_on:
      - backend
    user: "root"  # ‚Üê ADD THIS LINE to fix permission issues
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  mysql_data: