name: Deploy Backend to EC2

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'docker-compose.yml'
      - '.github/workflows/backend.yml'

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build backend docker image
        run: |
          docker build \
            -t kelomi44/backend-app:${{ github.sha }} \
            -t kelomi44/backend-app:latest \
            ./backend
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Push backend docker image to DockerHub
        run: |
          docker push kelomi44/backend-app:${{ github.sha }}
          docker push kelomi44/backend-app:latest
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}
      
      - name: Deploy backend to EC2
        env:
          SSH_USER: ${{ secrets.EC2_USER }}
          SSH_HOST: ${{ secrets.EC2_HOST }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Copy docker-compose.yml to EC2
          scp -o StrictHostKeyChecking=no \
              docker-compose.yml \
              ${SSH_USER}@${SSH_HOST}:/home/userapp/
          
          # Copy MySQL init file if it exists
          if [ -f mysql/init.sql ]; then
            scp -o StrictHostKeyChecking=no \
                -r mysql/ \
                ${SSH_USER}@${SSH_HOST}:/home/userapp/
          fi
          
          # Deploy backend
          ssh -o StrictHostKeyChecking=no \
              ${SSH_USER}@${SSH_HOST} << 'ENDSSH'
            set -e
            cd /home/userapp
            
            # Update backend image tag in docker-compose.yml
            sed -i "s|kelomi44/backend-app:.*|kelomi44/backend-app:${IMAGE_TAG}|" docker-compose.yml
            
            # Pull and restart backend only (without affecting MySQL)
            docker compose pull backend
            docker compose up -d --no-deps backend
            
            # Verify deployment
            sleep 10
            docker compose ps backend
            echo "Backend deployment completed!"
          ENDSSH